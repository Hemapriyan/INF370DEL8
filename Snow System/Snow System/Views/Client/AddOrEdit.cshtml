@model Snow_System.Client

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="pageHeading">Add/Edit Client</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="CenteringContainer">

        @Html.HiddenFor(model => model.UserID)








        @Html.HiddenFor(model => model.User.UserRoleID)
        @*<div class="form-group">
            @Html.LabelFor(model => model.u.UserRoleID, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.u.UserRoleID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.u.UserRoleID, "", new { @class = "text-danger" })
            </div>
        </div>*@
        @Html.HiddenFor(model => model.ClientID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientSurname, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ClientSurname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientSurname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
        @Html.LabelFor(model => model.c.ClientTypeID, htmlAttributes: new { @class = "control-label " })
        <div class="col-md-12">
            @Html.EditorFor(model => model.c.ClientTypeID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.c.ClientTypeID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.c.ClientTypeID, htmlAttributes: new { @class = "control-label " })
        <div class="col-md-12">
            <select name="ClientTypeID" class="custom-select" style="color:black;">
                <option selected="">Open this select menu</option>
                @foreach (var item in Model.ClientTypeList)
                {
                    <option value="@item.ClientTypeID">@item.Description</option>

                }
            </select>
            </div>
        </div>


        <div class="form-group">
            <select name="ClientTypeID" class="custom-select" style="color:black;">
                <option>Select</option>
                @foreach (var item in Model.ClientTypeList)
                {
                    if (item.ClientTypeID == Model.emp.ClientTypeID)
                    {
                        <option selected="selected" value="@item.ClientTypeID">@item.Description</option>
                    }
                    else
                    {
                        <option value="@item.ClientTypeID">@item.Description</option>
                    }
                }
            </select>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.c.UserID, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.c.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.c.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(Model => Model.location.LocationTypeID)*@




        @*//added by me 11-0ct 17h00 below code. testing of adding location at the same time as adding client*@

        @Html.HiddenFor(model => model.LocationID)


        <div class="form-group">
            @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonName, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ContactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPersonName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPersonNumber, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ContactPersonNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPersonNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.LocationTypeID, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LocationTypeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationTypeID, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <select name="LocationTypeID" class="custom-select" style="color:black;">
                <option>Select</option>
                @foreach (var item in Model.LocationTypeList)
                {
                    if (item.LocationTypeID == Model.LocationTypeID)
                    {
                        <option selected="selected" value="@item.LocationTypeID">@item.Description</option>
                    }
                    else
                    {
                        <option value="@item.LocationTypeID">@item.Description</option>
                    }
                }
            </select>
        </div>


        @*@Html.HiddenFor(Model => Model.LocationTypeID)*@

    </div>



    </div>
        



    
    <div>
        <div class="form-group">
            <button onclick="document.getElementById('lodgeModal').style.display='block'" class="OptionButton ContinueBtn btn btn-success" style="float:right;bottom: 0; right: 0; "><span class="glyphicon glyphicon-ok-circle"></span> <br />Add</button>

            <a href="@Url.Action("Index","Client")" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; left: 0; "><span class="glyphicon glyphicon-remove-circle"></span><br />Cancel</a>



        </div>
    </div>
    


    


}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval");





}