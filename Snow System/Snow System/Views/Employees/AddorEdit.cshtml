@model Snow_System.Models.EmployeeModelGlobal

@{
    ViewBag.Title = "AddorEdit";
}

<h2 class="pageHeading">Employee</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="CenteringContainer">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.emp.EmployeeID)

            <div class="form-group">
                @Html.LabelFor(model => model.emp.Name, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp.Surname, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp.IDNumber, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.IDNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp.HouseAddress, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.HouseAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.HouseAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp.Picture, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.Picture, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.Picture, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp.Certification, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.Certification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.Certification, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <select name="EmployeeTypeID" class="custom-select" style="color:black;">
                    <option>Select</option>
                    @foreach (var item in Model.EmployeeTypeList)
                    {
                        if (item.EmployeeTypeID == Model.emp.EmployeeTypeID)
                        {
                            <option selected="selected" value="@item.EmployeeTypeID">@item.Description</option>
                        }
                        else
                        {
                            <option value="@item.EmployeeTypeID">@item.Description</option>
                        }
                    }
                </select>
            </div>


            @*<div class="form-group">*@
            @**@@*Html.LabelFor(model => model.emp.EmployeeTypeID, htmlAttributes: new { @class = "control-label " })
        <div class="col-md-12">
            @Html.DropDownList("EmployeeType", "Select EMployee type")*@
            @*@Html.DropDownListFor(m => m.EmployeeType, new SelectList(ViewBag.EmployeeType,"Select Type"))*@
            @*<select id="ddlFruits" name="FruitId">
            <option value="0">Please select</option>
            @foreach (var item in (ViewBag.EmployeeType))
            {
                <option value="@item.EmployeeTypeId">@item.Description</option>
            }
        </select>*@
            @*@Html.EditorFor(model => model.EmployeeType.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EmployeeType.Description, "", new { @class = "text-danger" })*@
            @*</div>
        </div>*@
            @Html.HiddenFor(model=> model.emp.UserID)
            <div class="form-group">
                @Html.LabelFor(model => model.emp.UserName, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.UserName, "", new { @class = "text-danger" })
                </div>
            </div> 
            <div class="form-group">
                @Html.LabelFor(model => model.emp.Password, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.emp.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emp.Password, "", new { @class = "text-danger" })
                </div>
            </div>




        </div>
        <div class="form-group">

            <button onclick="document.getElementById('lodgeModal').style.display='block'" class="OptionButton ContinueBtn btn btn-success" style="float:right"><span class="glyphicon glyphicon-ok-circle"></span> <br />Add</button>
            <a href="1" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; left: 0; "><span class="glyphicon glyphicon-remove-circle"></span><br />Cancel</a>
        </div>


    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            var successMessage = '@TempData["SuccessMessage"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });

        function Delete(id) {
            alertify.confirm('Web API CRUD', 'Are you sure you want to delete this record?',function () {
                window.location.href = '@Url.Action("Delete","Client")/' + id;
            }, null);
        }
    </script>
}
