@model Snow_System.Location

@{
    ViewBag.Title = "AddorEdit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="pageHeading">Add Location</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="CenteringContainer">
            @Html.HiddenFor(model => model.LocationID)
            @Html.HiddenFor(model => model.ClientID)


            <div class="form-group">
                @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactPersonName, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ContactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactPersonName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactPersonNumber, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ContactPersonNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactPersonNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.emp.LocationTypeID, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.emp.LocationTypeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emp.LocationTypeID, "", new { @class = "text-danger" })
            </div>
        </div>*@
            @*<div class="form-group">
                <select name="LocationTypeID" class="custom-select" style="color:black;">
                    <option>Select</option>
                    @foreach (var item in Model.LocationTypeList)
                    {
                        if (item.LocationTypeID == Model.emp.LocationTypeID)
                        {
                            <option selected="selected" value="@item.LocationTypeID">@item.Description</option>
                        }
                        else
                        {
                            <option value="@item.LocationTypeID">@item.Description</option>
                        }
                    }
                </select>
            </div>*@

            @Html.HiddenFor(Model=>Model.LocationTypeID)

        </div>
        <div class="form-group">

            <button onclick="document.getElementById('lodgeModal').style.display='block'" class="OptionButton ContinueBtn btn btn-success" style="float:right"><span class="glyphicon glyphicon-ok-circle"></span> <br />Add</button>
            @if (ViewBag.Action > 1)
            {
                <a href="@Url.Action("GoBack","Location")" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; left: 0; "><span class="glyphicon glyphicon-remove-circle"></span><br />Cancel</a>
            }
        </div>
    </div>
        </div>
        
  }





        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
