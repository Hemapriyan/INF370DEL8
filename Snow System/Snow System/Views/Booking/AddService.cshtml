@{
    ViewBag.Title = "AddService";
    //Layout = "~/Views/Shared/CLayout.cshtml";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@model Snow_System.ServiceRequest

@using (Html.BeginForm("AddService", "Booking", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    //<script src="~/Scripts/modernizr-2.6.2.js"></script>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ServiceRequestID)

        <div class="TopInfoContainer">
            <h2 class="SectionHeading">Service Request Information</h2>
            <br />
            <div class="TopInfoLeft">

              
                <label for="ordID" style="font-size:18px;"> Service Requested Date: </label> <span name="ordIDInfo" style="color:black; font-size:20px;"><b> @ViewBag.date</b></span><br />
                <label for="ordStatus" style="font-size:18px;">Service Request Status: </label> <span name="ordStatus" style="color:black;font-size:20px;"><b>@ViewBag.status</b></span><br />
                <label for="ordLocation" style="font-size:18px;">Comment: </label> <span name="ordLocation" style="color:black;font-size:20px;"><b> @ViewBag.comment</b></span><br />

            </div>


            <div class="TopInfoRight">
                <label for="ordLocation" style="font-size:18px;">Contact Details: </label> <span name="ordLocation" style="color:black;font-size:20px;"><b> @ViewBag.contact</b></span><br />

                <label for="ordLocation" style="font-size:18px;">Service Location: </label> <span name="ordLocation" style="color:black;font-size:20px;"><b> @ViewBag.Location</b></span>

            </div>


        </div>
        <br />
        <br />

        <div id="calender"></div>

        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span id="eventTitle"></span></h4>
                    </div>
                    <div class="modal-body">
                        <p id="pDetails"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css" rel="stylesheet" />
        <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.print.css" rel="stylesheet" media="print" />

        <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
        <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />

        @section Scripts{
            <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
            <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>

            <script>
                $(document).ready(function () {
                    var events = [];
                    $.ajax({
                        type: "GET",
                        url: "/Booking/GetEvents",
                        success: function (data) {
                            $.each(data, function (i, v) {
                                events.push({
                                    title: v.Subject,
                                    description: v.Description,
                                    start: moment(v.Start),
                                    end: v.End != null ? moment(v.End) : null,
                                    color: v.ThemeColor,
                                    allDay: v.IsFullDay
                                });
                            })

                            GenerateCalender(events);
                        },
                        error: function (error) {
                            alert('failed');
                        }
                    })

                    function GenerateCalender(events) {
                        $('#calender').fullCalendar('destroy');
                        $('#calender').fullCalendar({
                            contentHeight: 400,
                            defaultDate: new Date(),
                            timeFormat: 'h(:mm)a',
                            header: {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'month,basicWeek,basicDay,agenda'
                            },
                            eventLimit: true,
                            eventColor: '#378006',
                            events: events,
                            eventClick: function (calEvent, jsEvent, view) {
                                $('#myModal #eventTitle').text(calEvent.title);
                                var $description = $('<div/>');
                                $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                                if (calEvent.end != null) {
                                    $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                                }
                                $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                                $('#myModal #pDetails').empty().html($description);

                                $('#myModal').modal();
                            }
                        })
                    }
                })
            </script>
        }


        <script>
            $(function () {
                $("#datepicker").datepicker({
                    startDate: new Date()
                });
            });
            $(function () {
            $("#datepickerend").datepicker({
                startDate: new Date()
            });
        });
        </script>

        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/modernizr-2.6.2.js"></script>
        @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
        <script src="~/Scripts/bootstrap.min.js"></script>
        @*@RenderBody()
        @RenderSection("Scripts", false)*@
        @using (Html.BeginForm("AddService", "Booking"))
        {
    <div class="CenteringContainer">
        <br />

        <div class="form-group">
            @*@Html.LabelFor(model => model.ServiceBookedDate, htmlAttributes: new { @class = "control-label " })*@
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.ServiceBookedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceBookedDate, "", new { @class = "text-danger" })*@
                Start Date:<input type="text" id="datepicker" class="form-control" name="Date" value="@Model.ServiceBookedDate">

                @*<label>Select start time: </label>*@ Time: <input type="time" name="startT" value="@Model.ServiceBookedDate" >
            </div>
            @*<label>Start Date: </label><input required type="date" name="Start">*@
        </div><br />

        <div class="form-group">
            @*@Html.LabelFor(model => model.ServiceBookedEndDate, htmlAttributes: new { @class = "control-label " })*@
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.ServiceBookedEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceBookedEndDate, "", new { @class = "text-danger" })*@
               End Date: <input type="datetime" id="datepickerend" class="form-control" name="eDate" value="@Model.ServiceBookedEndDate">
                @*<label>Select end time: </label>*@ Time:<input type="time" name="endT" value="@Model.ServiceBookedEndDate">

            </div>



            @*<label>End Date: </label><input required type="date" name="End">*@
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.IsFullDay, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-12">
                @Html.EditorFor(model => model.IsFullDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsFullDay, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <input type="submit" value="Book Date" onclick="document.getElementById('lodgeModal').style.display='block'" class="OptionButton ContinueBtn btn btn-success" style="float:right;" />
                <a href="@Url.Action("Index","ServiceRequest")" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; right: 0; ">Go Back</a>
                @*<a href="@Url.Action("Refresh","Booking")" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; right: 0; ">Refresh</a>*@

            </div>
        </div>
    </div>
            @*<a href="@Url.Action("Index","ServiceRequest")" class="OptionButton BackBtn btn btn-danger" style="position: relative; bottom: 0; right: 0; ">Enter Date</a>*@

        }
       
    </div>
}
<script>
        $(function () {
            var successMessage = '@TempData["SuccessMessage"]'
            var errorMessage = '@TempData["ErrorMessage"]'
            if (successMessage.includes("Error:"))
            {
                alertify.error(successMessage);
            }
            else if (successMessage != "")
            {
                alertify.success(successMessage);
            }
        });

        function Delete(id) {
            alertify.confirm('Web API CRUD', 'Are you sure you want to delete this record?',function () {
                window.location.href = '@Url.Action("Delete","Employees")/' + id;
            }, null);
        }
</script>


@*@section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
    <script>
            $(function () {
                var successMessage = '@TempData["SuccessMessage"]'
                var errorMessage='@TempData["ErrorMessage"]'
                if (successMessage != '')
                    alertify.success(successMessage);
                else if (errorMessage!='')
                {
                    alertify.error(errorMessage);
                }
            });

            function Delete(id) {
                alertify.confirm('Web API CRUD', 'Are you sure you want to delete this record?',function () {
                    window.location.href = '@Url.Action("Delete","Employees")/' + id;
                }, null);
            }
    </script>
    }*@

